syntax = "proto3";

package adber.financial.v1;

import "google/protobuf/timestamp.proto";
import "adber/financial/v1/amount.proto";
import "adber/financial/v1/enums.proto";

option go_package = "api/financial/v1;v1";
option java_multiple_files = true;
option java_package = "adber.financial.v1";

service ClientInvoiceService {
  rpc ListClientInvoice (ListClientInvoiceRequest) returns (ListClientInvoiceReply);
  rpc SaveClientInvoiceSchedule (SaveClientInvoiceScheduleRequest) returns (SaveClientInvoiceScheduleReply);
  rpc GetClientInvoiceSchedule (GetClientInvoiceScheduleRequest) returns (GetClientInvoiceScheduleReply);
  rpc CreateClientInvoice (CreateClientInvoiceRequest) returns (CreateClientInvoiceReply);
  rpc RefreshClientInvoice (RefreshClientInvoiceRequest) returns (RefreshClientInvoiceReply);
}

message ListClientInvoiceRequest {
  // 每页数量
  int32 limit = 1;
  // 跳过数量
  int32 offset = 2;
  // 排序字段
  enum SortKey {
    CREATED_AT = 0;
  }
  optional SortKey sort_key = 3;
  // 是否颠倒顺序（true为倒序/降序）
  bool reverse = 4;
  // 起始金额
  optional double amount_gte = 5;
  // 结束金额
  optional double amount_lte = 6;
  // 账单起始时间
  optional google.protobuf.Timestamp invoice_date_gte = 7;
  // 账单结束时间
  optional google.protobuf.Timestamp invoice_date_lte = 8;
  // 关键词
  optional string keyword = 9;
  // 账单ID
  repeated int32 invoice_ids = 10;
  // 账单号
  repeated string invoice_numbers = 11;
  // 品牌ID
  repeated int32 brand_ids = 12;
  // 用户ID
  repeated int32 user_ids = 13;
  // 账单状态
  repeated ClientInvoiceStatusEnum.ClientInvoiceStatus status = 14;
  // 账单类型
  repeated ClientInvoiceTypeEnum.ClientInvoiceType types = 15;
}
message ListClientInvoiceReply {
  int32 total_count = 1;
  message ClientInvoice {
    // 用户ID
    int32 brand_id = 1;
    // 用户ID
    int32 user_id = 2;
    // 账单号
    string invoice_number = 3;
    // 账单日期
    google.protobuf.Timestamp invoice_date = 4;
    // 类型
    ClientInvoiceTypeEnum.ClientInvoiceType invoice_type = 5;
    // 状态
    ClientInvoiceStatusEnum.ClientInvoiceStatus status = 6;
    message Item {
      // 名称
      string name = 1;
      // 描述
      string description = 2;
      // 金额
      Amount amount = 3;
      // 数量
      int32 qty = 4;
      // 费率
      float rate = 5;
    }
    // 账单内容
    repeated Item items = 7;
    // 流水起始时间
    google.protobuf.Timestamp transaction_start_time = 8;
    // 流水结束时间
    google.protobuf.Timestamp transaction_end_time = 9;
    // 账单ID
    int32 id = 10;
    message BillAddress {
      string name = 1;
      string company = 2;
      string address = 3;
      string mobile = 4;
      string email = 5;
    }
    // bill from
    BillAddress bill_from = 11;
    // bill to
    BillAddress bill_to = 12;
  }
  repeated ClientInvoice nodes = 2;
}

message SaveClientInvoiceScheduleRequest {
  // 用户ID
  int32 brand_id = 1;
  // 用户ID
  int32 user_id = 2;
  // 周期
  ClientInvoicePeriodEnum.ClientInvoicePeriod period = 3;
  // 是否启用
  bool is_active = 4;
  // cron 标准表达式的 minutes
  string minutes = 5;
  // cron 标准表达式的 hours
  string hours = 6;
  // cron 标准表达式的 day of month
  string dom = 7;
  // cron 标准表达式的 month month (1 - 12) OR jan,feb,mar,apr ...
  string month = 8;
  // cron 标准表达式的 day of week (0 - 7) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
  string dow = 9;
}
message SaveClientInvoiceScheduleReply {
  // 用户ID
  int32 brand_id = 1;
  // 用户ID
  int32 user_id = 2;
  // 周期
  ClientInvoicePeriodEnum.ClientInvoicePeriod period = 3;
  // 是否启用
  bool is_active = 4;
  // cron 标准表达式的 minutes
  string minutes = 5;
  // cron 标准表达式的 hours
  string hours = 6;
  // cron 标准表达式的 day of month
  string dom = 7;
  // cron 标准表达式的 month month (1 - 12) OR jan,feb,mar,apr ...
  string month = 8;
  // cron 标准表达式的 day of week (0 - 7) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
  string dow = 9;
}

message GetClientInvoiceScheduleRequest {
  // 品牌ID
  int32 brand_id = 1;
  // 用户ID
  int32  user_id = 2;
}
message GetClientInvoiceScheduleReply {
  // 用户ID
  int32 brand_id = 1;
  // 用户ID
  int32 user_id = 2;
  // 周期
  ClientInvoicePeriodEnum.ClientInvoicePeriod period = 3;
  // 是否启用
  bool is_active = 4;
  // cron 标准表达式的 minutes
  string minutes = 5;
  // cron 标准表达式的 hours
  string hours = 6;
  // cron 标准表达式的 day of month
  string dom = 7;
  // cron 标准表达式的 month month (1 - 12) OR jan,feb,mar,apr ...
  string month = 8;
  // cron 标准表达式的 day of week (0 - 7) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
  string dow = 9;
}

message CreateClientInvoiceRequest {
  // 品牌ID
  int32 brand_id = 1;
  // 用户ID
  int32 user_id = 2;
  // 交易流水起始范围
  google.protobuf.Timestamp transaction_time_gte = 3;
  // 交易流水终止范围
  google.protobuf.Timestamp transaction_time_lte = 4;
}
message CreateClientInvoiceReply {
  repeated ListClientInvoiceReply.ClientInvoice nodes = 1;
}

message RefreshClientInvoiceRequest {
  repeated int32 client_invoice_ids = 1;
}
message RefreshClientInvoiceReply {
  repeated ListClientInvoiceReply.ClientInvoice nodes = 1;
}